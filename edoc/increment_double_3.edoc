%% Notice: This file is auto-generated from 'doc/skel/func_docs.skel'
@doc
Calls /rpc/increment_double<p/>

Adds a number to the numeric double value of a record, and returns the
resulting value. It must be used to set an initial value for
subsequent increment_double calls.

```
% example:

1> kterl:get(Pid, "incd_test").
{error,no_record}
2> {ok, Res} = kterl:increment_double(Pid, "incd_test", 5.2).
...
3> kterl_result:get_num(Res).
5.2
4> kterl_result:get_num(kterl:increment_double(Pid, "incd_test", -6.2)).
-1.0
5> kterl_result:get_num(kterl:increment_double(Pid, "incd_test", 1.01)).
0.01
'''

The system can simply increment 0 to retrieve the current value, but
notice that it'll create the record if it doesn't exist.

```
6> kterl_result:get_num(kterl:increment_double(Pid, "incd_test", 0)).
0.01
7> kterl_result:get_value(kterl:get(Pid, "incd_test")).
<<0,0,0,0,0,0,0,0,0,0,9,24,78,114,160,0>>
'''

Notice: The server is unable to increment a value that was set by a non-increment call:

```
8> ok = kterl:add(Pid, "incd_fail", 1.0).
ok
9> kterl_result:get_value(kterl:get(Pid, "incd_fail")).
<<"1.000000">>
10> kterl:increment(Pid, "incd_fail", 1.0).
{error,incompatible_record}
'''

<p/>On success increment_double/3 will return <code>{ok, Result}</code>. The <code>Result</code> can then be passed to the following function(s) to access:<p/>```
kterl_result:get_num(Result).             % The result from an increment call, or a record count.

'''
@see increment/3
@see increment/4
@see increment_double/4


