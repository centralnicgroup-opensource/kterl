%% Notice: This file is auto-generated from 'doc/skel/func_docs.skel'
@doc
Calls /rpc/cur_get_value<p/>

Retrieves the value of the record located at the cursor. If 'step' is true,
the server will reposition the cursor to an adjacent record after the value
is retrieved.

``` 
% example:

1> kterl:set_bulk(Pid, [{"key1","val1"}, {"key2","val2"}]).
...
2> Cursor = kterl:cursor(Pid).
...
3> ok = kterl:cur_jump(Cursor).
ok
4> {ok, Res} = kterl:cur_get_value(Cursor, true).
{ok, ...}
5> kterl_result:get_value(Res).
<<"val1">>
6> kterl_result:get_value(kterl:cur_get_value(Cursor, true)).
<<"val2">>
7> kterl_result:get_value(kterl:cur_get_value(Cursor, true)).
{error,invalid_cursor}
'''

<p/>On success cur_get_value/2 will return <code>{ok, Result}</code>. The <code>Result</code> can then be passed to the following function(s) to access:<p/>```
kterl_result:get_value(Result).           % The record's value.
kterl_result:get_exptime(Result).         % The record's expiration time (if set.)

'''
@see cursor/1
@see cur_get_value/1
@see cur_get_value/3

